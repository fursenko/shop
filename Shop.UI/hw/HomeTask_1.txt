*1. Проинсталировать Angular-CLI (https://github.com/angular/angular-cli) 
   и/или AngularConsole (https://angularconsole.com)
    - Просмотреть CLI QuickStart https://angular.io/docs/ts/latest/cli-quickstart.html
    - Просмотреть Style Guide https://angular.io/guide/styleguide
    - Просмотреть СLI Commands https://angular.io/cli
    - Просмотреть Deprecation Guide https://angular.io/guide/deprecations 

*2. Создайте проект (ng new shop) и загрузите его на гитхаб без каких-либо дополнительных папок.
   Код можете писать для себя в отдельных бренчах. Итоговый код добавляйте в мастер и после этого отправляйте мне.
   В package.json замените содержимое команды start на ng lint && ng serve -o, чтобы при запуске проекта запускался линтинг и открывался браузер

*3. Создайте компонент FirstComponent. Используйте его в AppComponent.

*4. Добавьте несколько простых свойств для компонента FirstComponent и несколько свойств в виде массива. Выведите их в темплейт:
    - name: string
    - description: string
    - price: number
    - category: enum (Создайте enum с несколькими категориями) https://www.typescriptlang.org/docs/handbook/enums.html
    - isAvailable: boolean
    - ...

*5. Создайте компонент ProductComponent. Добавьте кнопку Buy в шаблон. Реализуйте обработчик события клик onBuy(), 
   который выводит в консоль сообщение о покупке товара.

*6. Создайте сервис ProductsService, который будет возвращать товары с помощью метода getProducts(). 
   Модель товара ProductModel опишите интерфейсом и/или классом, 
   который реализует данный интерфейс. Создайте массив из нескольких товаров. 
   Создайте компонент ProductListComponent. Используйте в нем сервис ProductsService, получите и отобразите товары на станице 
   c помощью директивы *ngFor.

7*. Создайте компонент (ng g c cart) и используйте его в AppComponent темплейте. Компонент должен отображать список купленых товаров. 
   Организуйте список в виде отдельного сервиса - CartService.  Используйте директиву *ngIf + else для отображения корзины (CartComponent), если она не пустая.
   Если корзина пустая отображать другой альтернативный блок с сообщением о пустой корзине.

8*. Реализуйте любую дополнительную функциональность.

9*. Создайте файл changelog.md в корне проекта и описывайте в нем то, что реализовали.

10*. Исправьте ошибки линтинга, если таковые будут.

11*. Загрузите ваш проект на github и отправьте мне ссылку (Vitaliy_Zhyrytskyy@epam.com). Cсылку надо отправлять после каждого задания.
    Это будет сигнал для меня, что вы завершили его.

12. Несколько бест практисис (Возвращайтесь к этому списку в каждом домашнем задании. Если есть что добавить, предлагайте):
    1. Сначала импортируем Ангуляр пакеты, затем сторонние пакеты, например, Rxjs, затем свои. Разделяем блоки пустой строкой
    2. Поля класса описываем в следующей последовательности, блоки полей и методы отделяем пустой строкой:
        - Инпуты,
        - Аутпуты
        - Другие декорируемые свойства
        - публичные поля
        - приватные поля
        - конструктор
        - методы жизненного цикла с префиксом ng
        - обработчики событий с префиксом on
        - публичные методы
        - приватные методы
    3. Модификатор public для полей и методов не используем. Они public по-умолчанию. Для параметров конструктора используем.
    4. То, к чему нужен доступ в темплейте - public, а не private.
    5. В корневой папке приложения app должны быть только корневой компонент и корневой модуль. Остальные файлы должны быть разложены по папкам.
    6. Модели именовать ProductModel, CartModel, и т. д.
    7. Проект организовать по функционалу, а не по типам сущностей. 
       Например
        cart 
            components
            models
            services
        products
            components
            models
            services
        shared
            directives
            pipes
        core
            services
